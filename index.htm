<!DOCTYPE html>
<meta charset="utf-8">

<!--<link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">-->
<link rel="stylesheet" href="style.css">
<style>




/* Slider */  
#custom-handle {
	width: 3em;
	height: 1.6em;
	top: 50%;
	margin-top: -.8em;
	text-align: center;
	line-height: 1.6em;
} 
body,H1 {
	font-family: Arial, Helvetica, sans-serif;
}
table {
	font-size: 1em;
}
.ui-draggable, .ui-droppable {
	background-position: top;
}




/* Chart */  
body {
  font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
  width: 960px;
  height: 500px;
  position: relative;
}
svg {
	width: 100%;
	height: 100%;
}
path.slice{
	stroke-width:2px;
}
polyline{
	opacity: .3;
	stroke: black;
	stroke-width: 2px;
	fill: none;
}

</style>


<body>
<!--<button class="randomize">randomize</button>-->
<H1>Carbon Share per Continent from 1980 - 2010</H1>
<br><br>
<div id="slider">
  <div id="custom-handle" class="ui-slider-handle"></div>
</div>
<br><br>


<script src="https://code.jquery.com/jquery-1.12.4.js"></script>
<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
<script src="http://d3js.org/d3.v3.min.js"></script>
<script>

	var svg = d3.select("body")
		.append("svg")
		.append("g")

	svg.append("g")
		.attr("class", "slices");
	svg.append("g")
		.attr("class", "labels");
	svg.append("g")
		.attr("class", "lines");

	var width = 960,
		height = 450,
		radius = Math.min(width, height) / 2;

	var pie = d3.layout.pie()
		.sort(null)
		.value(function(d) {
			return d.value;
		});

	var arc = d3.svg.arc()
		.outerRadius(radius * 0.8)
		.innerRadius(radius * 0.4);

	var outerArc = d3.svg.arc()
		.innerRadius(radius * 0.9)
		.outerRadius(radius * 0.9);

	svg.attr("transform", "translate(" + width / 2 + "," + height / 2 + ")");

	var key = function(d){ return d.data.label; };

	var color = d3.scale.ordinal()
		.domain(["Europe", "North America", "South America", "Africa", "Asia"])
		.range(["#98abc5", "#8a89a6", "#7b6888", "#6b486b", "#a05d56"]); //, "#d0743c", "#ff8c00"


	var europe = {}, nAmerica = {}, sAmerica = {}, africa = {}, asia = {};

	function returnValue(continent, year){

	}

		
	function getCarbon(label, year){
		
		if(label == "Europe"){
			for(i in europe){
				//console.log("-->> ", europe[i]);
				if(europe[i].year == year){
					var retVal = europe[i].value;
					//console.log("retVal : ", retVal);
					return retVal;
				}
			}
		}
		else if (label == "North America"){
			//nAmerica = {};
			for(i in nAmerica){
				//console.log("-->> ", nAmerica[i]);
				if(nAmerica[i].year == year){
					var retVal = nAmerica[i].value;
					//console.log("retVal : ", retVal);
					return retVal;
				}
			}
		}
		else if (label == "South America"){
			//sAmerica = {};
			for(i in sAmerica){
				//console.log("-->> ", sAmerica[i]);
				if(sAmerica[i].year == year){
					var retVal = sAmerica[i].value;
					//console.log("retVal : ", retVal);
					return retVal;
				}
			}		
		}
		else if (label == "Africa"){
			//africa = {};
			for(i in africa){
				//console.log("-->> ", africa[i]);
				if(africa[i].year == year){
					var retVal = africa[i].value;
					//console.log("retVal : ", retVal);
					return retVal;
				}
			}				
		}
		else if (label == "Asia"){
			//asia = {};
			for(i in asia){
				//console.log("-->> ", asia[i]);
				if(asia[i].year == year){
					var retVal = asia[i].value;
					//console.log("retVal : ", retVal);
					return retVal;
				}
			}					
		}

		
	}	

		
	function randomData (year){
		var labels = color.domain();
		return labels.map(function(label){
			return { label: label, value: getCarbon(label, year)  }
		});
	}

	change(randomData());

	/*
	d3.select(".randomize")
		.on("click", function(){
			change(randomData());
		});
	*/

	function change(data) {

		/* ------- PIE SLICES -------*/
		var slice = svg.select(".slices").selectAll("path.slice")
			.data(pie(data), key);

		slice.enter()
			.insert("path")
			.style("fill", function(d) { return color(d.data.label); })
			.attr("class", "slice");

		slice		
			.transition().duration(1000)
			.attrTween("d", function(d) {
				this._current = this._current || d;
				var interpolate = d3.interpolate(this._current, d);
				this._current = interpolate(0);
				return function(t) {
					return arc(interpolate(t));
				};
			})

		slice.exit()
			.remove();

		/* ------- TEXT LABELS -------*/

		var text = svg.select(".labels").selectAll("text")
			.data(pie(data), key);

		text.enter()
			.append("text")
			.attr("dy", ".35em")
			.text(function(d) {
				return d.data.label;
			});
		
		function midAngle(d){
			return d.startAngle + (d.endAngle - d.startAngle)/2;
		}

		text.transition().duration(1000)
			.attrTween("transform", function(d) {
				this._current = this._current || d;
				var interpolate = d3.interpolate(this._current, d);
				this._current = interpolate(0);
				return function(t) {
					var d2 = interpolate(t);
					var pos = outerArc.centroid(d2);
					pos[0] = radius * (midAngle(d2) < Math.PI ? 1 : -1);
					return "translate("+ pos +")";
				};
			})
			.styleTween("text-anchor", function(d){
				this._current = this._current || d;
				var interpolate = d3.interpolate(this._current, d);
				this._current = interpolate(0);
				return function(t) {
					var d2 = interpolate(t);
					return midAngle(d2) < Math.PI ? "start":"end";
				};
			});

		text.exit()
			.remove();

		/* ------- SLICE TO TEXT POLYLINES -------*/

		var polyline = svg.select(".lines").selectAll("polyline")
			.data(pie(data), key);
		
		polyline.enter()
			.append("polyline");

		polyline.transition().duration(1000)
			.attrTween("points", function(d){
				this._current = this._current || d;
				var interpolate = d3.interpolate(this._current, d);
				this._current = interpolate(0);
				return function(t) {
					var d2 = interpolate(t);
					var pos = outerArc.centroid(d2);
					pos[0] = radius * 0.95 * (midAngle(d2) < Math.PI ? 1 : -1);
					return [arc.centroid(d2), outerArc.centroid(d2), pos];
				};			
			});
		
		polyline.exit()
			.remove();
	};

	
	//init slider
	$( function() {
		var handle = $( "#custom-handle" );
		$( "#slider" ).slider({
		  create: function() {
			handle.text( $( this ).slider( "value" ) );
		  },
		  slide: function( event, ui ) {
			handle.text( ui.value );
			
			change(randomData(ui.value));
			
		  },
		  min: 1980,
		  max: 2010,
		});
	} );

	//data
	europe = [ { year: 1980, value: 4680.33},{ year: 1981, value: 4507.98},{ year: 1982, value: 4423.62},{ year: 1983, value: 4398.65},{ year: 1984, value: 4452.75},{ year: 1985, value: 4553.82},{ year: 1986, value: 4594.94},{ year: 1987, value: 4643.72},{ year: 1988, value: 4583.29},{ year: 1989, value: 4640.64},{ year: 1990, value: 4545.56},{ year: 1991, value: 4454.94},{ year: 1992, value: 4319.59},{ year: 1993, value: 4301.67},{ year: 1994, value: 4242.86},{ year: 1995, value: 4308.96},{ year: 1996, value: 4449.65},{ year: 1997, value: 4459.81},{ year: 1998, value: 4447.04},{ year: 1999, value: 4393.02},{ year: 2000, value: 4457.78},{ year: 2001, value: 4505.38},{ year: 2002, value: 4489.13},{ year: 2003, value: 4631.8},{ year: 2004, value: 4673.74},{ year: 2005, value: 4676.88},{ year: 2006, value: 4716.98},{ year: 2007, value: 4696.93},{ year: 2008, value: 4626.47},{ year: 2009, value: 4314.15},{ year: 2010, value: 4370.29} ];
	asia = [ { year: 1980, value: 3541.47},{ year: 1981, value: 3599.4},{ year: 1982, value: 3657.11},{ year: 1983, value: 3774.42},{ year: 1984, value: 4094.74},{ year: 1985, value: 4277.98},{ year: 1986, value: 4411.17},{ year: 1987, value: 4620.17},{ year: 1988, value: 4957.31},{ year: 1989, value: 5107.43},{ year: 1990, value: 5262.88},{ year: 1991, value: 5485.06},{ year: 1992, value: 5674.98},{ year: 1993, value: 5998.06},{ year: 1994, value: 6375.8},{ year: 1995, value: 6637.21},{ year: 1996, value: 6770.42},{ year: 1997, value: 7117.27},{ year: 1998, value: 6960.91},{ year: 1999, value: 7114.93},{ year: 2000, value: 7227.17},{ year: 2001, value: 7416.32},{ year: 2002, value: 8011.91},{ year: 2003, value: 8765.55},{ year: 2004, value: 9986.34},{ year: 2005, value: 10545.94},{ year: 2006, value: 11011.76},{ year: 2007, value: 11557.18},{ year: 2008, value: 12247.76},{ year: 2009, value: 12800.02},{ year: 2010, value: 14161.44} ]; 
	africa = [ { year: 1980, value: 537.12},{ year: 1981, value: 536.44},{ year: 1982, value: 570.34},{ year: 1983, value: 595.39},{ year: 1984, value: 626.27},{ year: 1985, value: 640.93},{ year: 1986, value: 666.79},{ year: 1987, value: 681.84},{ year: 1988, value: 698.09},{ year: 1989, value: 701.59},{ year: 1990, value: 725.7},{ year: 1991, value: 747.42},{ year: 1992, value: 760.74},{ year: 1993, value: 775.97},{ year: 1994, value: 812.38},{ year: 1995, value: 825.76},{ year: 1996, value: 843.12},{ year: 1997, value: 867.94},{ year: 1998, value: 856.27},{ year: 1999, value: 873.02},{ year: 2000, value: 887.25},{ year: 2001, value: 915.81},{ year: 2002, value: 918.32},{ year: 2003, value: 968.63},{ year: 2004, value: 1016.85},{ year: 2005, value: 1056.84},{ year: 2006, value: 1062.36},{ year: 2007, value: 1097.51},{ year: 2008, value: 1158.05},{ year: 2009, value: 1115.91},{ year: 2010, value: 1145.16} ]; 
	sAmerica = [ { year: 1980, value: 627.37},{ year: 1981, value: 620.21},{ year: 1982, value: 612.19},{ year: 1983, value: 594.58},{ year: 1984, value: 621.15},{ year: 1985, value: 624.63},{ year: 1986, value: 670.39},{ year: 1987, value: 687.49},{ year: 1988, value: 697.46},{ year: 1989, value: 715.91},{ year: 1990, value: 716.33},{ year: 1991, value: 738.43},{ year: 1992, value: 743.59},{ year: 1993, value: 783.85},{ year: 1994, value: 812.03},{ year: 1995, value: 857.61},{ year: 1996, value: 903.17},{ year: 1997, value: 949.12},{ year: 1998, value: 974.45},{ year: 1999, value: 978.43},{ year: 2000, value: 991.33},{ year: 2001, value: 1013.53},{ year: 2002, value: 1004.79},{ year: 2003, value: 1019.86},{ year: 2004, value: 1063.6},{ year: 2005, value: 1102.93},{ year: 2006, value: 1148.81},{ year: 2007, value: 1169.14},{ year: 2008, value: 1221.1},{ year: 2009, value: 1203.37},{ year: 2010, value: 1257.74} ];
	nAmerica = [ { year: 1980, value: 5475.29},{ year: 1981, value: 5356.34},{ year: 1982, value: 5117.32},{ year: 1983, value: 5060.3},{ year: 1984, value: 5331.95},{ year: 1985, value: 5329.6},{ year: 1986, value: 5308.48},{ year: 1987, value: 5493.83},{ year: 1988, value: 5745.62},{ year: 1989, value: 5854.51},{ year: 1990, value: 5814.25},{ year: 1991, value: 5773.82},{ year: 1992, value: 5893.12},{ year: 1993, value: 5991.9},{ year: 1994, value: 6094.07},{ year: 1995, value: 6151.01},{ year: 1996, value: 6359.7},{ year: 1997, value: 6473.98},{ year: 1998, value: 6538.32},{ year: 1999, value: 6607.61},{ year: 2000, value: 6818.8},{ year: 2001, value: 6696.6},{ year: 2002, value: 6752.5},{ year: 2003, value: 6839.01},{ year: 2004, value: 6959.92},{ year: 2005, value: 7014.65},{ year: 2006, value: 6950.03},{ year: 2007, value: 7071.37},{ year: 2008, value: 6889.7},{ year: 2009, value: 6412.19},{ year: 2010, value: 6605.67} ]; 
	
	//on init
	change(randomData(1980));

</script>


</body>